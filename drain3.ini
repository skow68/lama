[SNAPSHOT]
snapshot_interval_minutes = 10
compress_state = True
 
[MASKING]
masking = [
        #{"regex_pattern":"((?<=[^A-Za-z0-9])|^)(\\d{8}\\:\\d)((?=[^A-Za-z0-9])|$)", "mask_with": "ID"},
        #{"regex_pattern":"((?<=[^A-Za-z0-9])|^)(\\d{4}/\\d{2}/\\d{2} \\d{2}:\\d{2}:\\d{2})((?=[^A-Za-z0-9])|$)", "mask_with": "DATE1"},
        {"regex_pattern":"((?<=[^A-Za-z0-9])|^)(some_name)((?=[^A-Za-z0-9])|$)", "mask_with": "PANDEVICE"},
        {"regex_pattern":"((?<=[^A-Za-z0-9])|^)(some_name\ [a-z]+ (perl|logger|tmsh|iprepd|mcpd|zxfrd|apmd|big3d)\\[\\d+\\]\\: [a-f0-9]{8}\\:\\d+\\:)((?=[^A-Za-z0-9])|$)", "mask_with": "F5DEVICE"},
        {"regex_pattern":"((?<=[^A-Za-z0-9])|^)(some_name [a-z]+ (tmm\\d?)\\[\\d+\\]\\: [a-f0-9]{8}\\:\\d+\\:)((?=[^A-Za-z0-9])|$)", "mask_with": "F5DEVICE"},
        {"regex_pattern":"((?<=[^A-Za-z0-9])|^)(some_name [a-z]+ (anacron|snmpd|shell|httpd|sshd|named|sSMTP)\\[\\d+\\]\\:)((?=[^A-Za-z0-9])|$)", "mask_with": "F5DEVICE"},
        {"regex_pattern":"((?<=[^A-Za-z0-9])|^)(some_name [a-z]*\\s*(platform[\\-_]\\w+)\\[\\d*\\]\\:)((?=[^A-Za-z0-9])|$)", "mask_with": "F5DEVICE"},
        #{"regex_pattern":"((?<=[^A-Za-z0-9])|^)(some_name [a-z]+ (platform[\\-_]\\w+)\\[\\d*\\]\\:)((?=[^A-Za-z0-9])|$)", "mask_with": "F5DEVICE"},
        {"regex_pattern":"((?<=[^A-Za-z0-9])|^)(some_name))((?=[^A-Za-z0-9])|$)", "mask_with" : "CISDEVICE"},
        {"regex_pattern":"((?<=[^A-Za-z0-9])|^)(certificate )(\\(.+?\\))((?=[^A-Za-z0-9])|$)", "mask_with": "F5CERT"},
        {"regex_pattern":"((?<=[^A-Za-z0-9])|^)(TCL error\\: .+$)", "mask_with": "F5TCLERR"},
        {"regex_pattern":"((?<=[^A-Za-z0-9])|^)((http|HTTP)[sS]?\\:\\/\\/\\S+)((?=[^A-Za-z0-9])|$)", "mask_with": "HTTP"},
        {"regex_pattern":"((?<=[^A-Za-z0-9])|^)(\\/Common\\/\\S+)((?=[^A-Za-z0-9])|$)", "mask_with": "F5OBJECT"},
        {"regex_pattern":"((?<=[^A-Za-z0-9]))([Ss]ubject [nN]ame )(.+?)($)", "mask_with": "CISCERT"},
        {"regex_pattern":"((?<=[^A-Za-z0-9])|^)((?i)(?:username|user)[= ]([A-Za-z0-9_\\\\]+)[, ]?)((?=[^A-Za-z0-9])|$)", "mask_with": "USERNAME"},
        {"regex_pattern":"((?<=[^A-Za-z0-9])|^)(\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3})((?=[^A-Za-z0-9])|$)", "mask_with": "IP"},
        #{"regex_pattern":"((?<=[^A-Za-z0-9])|^)([0-9a-f]{6,} ?){3,}((?=[^A-Za-z0-9])|$)", "mask_with": "SEQ"},
        #{"regex_pattern":"((?<=[^A-Za-z0-9])|^)([0-9A-F]{4} ?){4,}((?=[^A-Za-z0-9])|$)", "mask_with": "SEQ"},
        {"regex_pattern":"((?<=[^A-Za-z0-9])|^)(0x[a-f0-9A-F]+)((?=[^A-Za-z0-9])|$)", "mask_with": "HEX"},
        {"regex_pattern":"((?<=[^A-Za-z0-9])|^)([\\-\\+]?\\d+)((?=[^A-Za-z0-9])|$)", "mask_with": "NUM"}
        ]
mask_prefix = <:
mask_suffix = :>
 
[DRAIN]
# engine is Optional parameter. Engine will be "Drain" if the engine argument is not specified.
# engine has two options: 'Drain' and 'JaccardDrain'.
# engine = Drain
sim_th = 0.4
depth = 8
max_children = 100
max_clusters = 1024
#extra_delimiters = ["_"]
 
[PROFILING]
enabled = True
report_sec = 30
